
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID NUMBER STRING PLUS MINUS TIMES DIVIDE MODULO POW EQUALS LPAREN RPAREN SEMI INPUT OUTPUT GOTOprogram : statement SEMI\n               | statement SEMI programstatement : io_statement\n                 | goto_statement\n                 | assignment_statement\n                 | noneio_statement : input_statement\n                    | output_statementinput_statement : INPUT varoutput_statement : OUTPUT exprgoto_statement : GOTO expr assignment_statement : var EQUALS exprexpr : term\n            | term MODULO termterm : part\n            | part PLUS part\n            | part MINUS part part : smallpart\n            | smallpart TIMES smallpart\n            | smallpart DIVIDE smallpartsmallpart : factor\n                 | factor POW factorfactor : PLUS factor\n           | MINUS factor\n           | num\n           | str\n           | LPAREN expr RPAREN\n           | varvar : IDnum : NUMBERstr : STRINGnone :'
    
_lr_action_items = {'GOTO':([0,14,],[9,9,]),'SEMI':([0,2,3,4,5,6,7,8,13,14,15,16,17,20,21,22,23,25,26,27,29,30,35,36,41,42,43,44,45,46,47,48,],[-32,14,-3,-4,-5,-6,-7,-8,-29,-32,-11,-13,-15,-18,-21,-25,-26,-28,-30,-31,-9,-10,-23,-24,-12,-14,-16,-17,-19,-20,-22,-27,]),'INPUT':([0,14,],[11,11,]),'OUTPUT':([0,14,],[12,12,]),'ID':([0,9,11,12,14,18,19,24,28,32,33,34,37,38,39,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'$end':([1,14,31,],[0,-1,-2,]),'PLUS':([9,12,13,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,45,46,47,48,],[18,18,-29,33,18,18,-18,-21,-25,-26,18,-28,-30,-31,18,18,18,18,-23,-24,18,18,18,-19,-20,-22,-27,]),'MINUS':([9,12,13,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,45,46,47,48,],[19,19,-29,34,19,19,-18,-21,-25,-26,19,-28,-30,-31,19,19,19,19,-23,-24,19,19,19,-19,-20,-22,-27,]),'LPAREN':([9,12,18,19,24,28,32,33,34,37,38,39,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'NUMBER':([9,12,18,19,24,28,32,33,34,37,38,39,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'STRING':([9,12,18,19,24,28,32,33,34,37,38,39,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'EQUALS':([10,13,],[28,-29,]),'POW':([13,21,22,23,25,26,27,35,36,48,],[-29,39,-25,-26,-28,-30,-31,-23,-24,-27,]),'TIMES':([13,20,21,22,23,25,26,27,35,36,47,48,],[-29,37,-21,-25,-26,-28,-30,-31,-23,-24,-22,-27,]),'DIVIDE':([13,20,21,22,23,25,26,27,35,36,47,48,],[-29,38,-21,-25,-26,-28,-30,-31,-23,-24,-22,-27,]),'MODULO':([13,16,17,20,21,22,23,25,26,27,35,36,43,44,45,46,47,48,],[-29,32,-15,-18,-21,-25,-26,-28,-30,-31,-23,-24,-16,-17,-19,-20,-22,-27,]),'RPAREN':([13,16,17,20,21,22,23,25,26,27,35,36,40,42,43,44,45,46,47,48,],[-29,-13,-15,-18,-21,-25,-26,-28,-30,-31,-23,-24,48,-14,-16,-17,-19,-20,-22,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,14,],[1,31,]),'statement':([0,14,],[2,2,]),'io_statement':([0,14,],[3,3,]),'goto_statement':([0,14,],[4,4,]),'assignment_statement':([0,14,],[5,5,]),'none':([0,14,],[6,6,]),'input_statement':([0,14,],[7,7,]),'output_statement':([0,14,],[8,8,]),'var':([0,9,11,12,14,18,19,24,28,32,33,34,37,38,39,],[10,25,29,25,10,25,25,25,25,25,25,25,25,25,25,]),'expr':([9,12,24,28,],[15,30,40,41,]),'term':([9,12,24,28,32,],[16,16,16,16,42,]),'part':([9,12,24,28,32,33,34,],[17,17,17,17,17,43,44,]),'smallpart':([9,12,24,28,32,33,34,37,38,],[20,20,20,20,20,20,20,45,46,]),'factor':([9,12,18,19,24,28,32,33,34,37,38,39,],[21,21,35,36,21,21,21,21,21,21,21,47,]),'num':([9,12,18,19,24,28,32,33,34,37,38,39,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'str':([9,12,18,19,24,28,32,33,34,37,38,39,],[23,23,23,23,23,23,23,23,23,23,23,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement SEMI','program',2,'p_program','gotoParser.py',10),
  ('program -> statement SEMI program','program',3,'p_program','gotoParser.py',11),
  ('statement -> io_statement','statement',1,'p_statement','gotoParser.py',27),
  ('statement -> goto_statement','statement',1,'p_statement','gotoParser.py',28),
  ('statement -> assignment_statement','statement',1,'p_statement','gotoParser.py',29),
  ('statement -> none','statement',1,'p_statement','gotoParser.py',30),
  ('io_statement -> input_statement','io_statement',1,'p_io_statement','gotoParser.py',35),
  ('io_statement -> output_statement','io_statement',1,'p_io_statement','gotoParser.py',36),
  ('input_statement -> INPUT var','input_statement',2,'p_input_statement','gotoParser.py',41),
  ('output_statement -> OUTPUT expr','output_statement',2,'p_output_statement','gotoParser.py',46),
  ('goto_statement -> GOTO expr','goto_statement',2,'p_goto_statement','gotoParser.py',52),
  ('assignment_statement -> var EQUALS expr','assignment_statement',3,'p_assignment_statement','gotoParser.py',57),
  ('expr -> term','expr',1,'p_expr','gotoParser.py',63),
  ('expr -> term MODULO term','expr',3,'p_expr','gotoParser.py',64),
  ('term -> part','term',1,'p_term','gotoParser.py',73),
  ('term -> part PLUS part','term',3,'p_term','gotoParser.py',74),
  ('term -> part MINUS part','term',3,'p_term','gotoParser.py',75),
  ('part -> smallpart','part',1,'p_part','gotoParser.py',83),
  ('part -> smallpart TIMES smallpart','part',3,'p_part','gotoParser.py',84),
  ('part -> smallpart DIVIDE smallpart','part',3,'p_part','gotoParser.py',85),
  ('smallpart -> factor','smallpart',1,'p_smallpart','gotoParser.py',93),
  ('smallpart -> factor POW factor','smallpart',3,'p_smallpart','gotoParser.py',94),
  ('factor -> PLUS factor','factor',2,'p_factor','gotoParser.py',102),
  ('factor -> MINUS factor','factor',2,'p_factor','gotoParser.py',103),
  ('factor -> num','factor',1,'p_factor','gotoParser.py',104),
  ('factor -> str','factor',1,'p_factor','gotoParser.py',105),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','gotoParser.py',106),
  ('factor -> var','factor',1,'p_factor','gotoParser.py',107),
  ('var -> ID','var',1,'p_variable','gotoParser.py',118),
  ('num -> NUMBER','num',1,'p_num','gotoParser.py',124),
  ('str -> STRING','str',1,'p_str','gotoParser.py',129),
  ('none -> <empty>','none',0,'p_none','gotoParser.py',133),
]
